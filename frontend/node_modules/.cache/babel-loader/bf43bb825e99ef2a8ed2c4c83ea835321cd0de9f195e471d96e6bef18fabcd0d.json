{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wuzek\\\\OneDrive\\\\Desktop\\\\fact_check_website\\\\frontend\\\\src\\\\components\\\\Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Survey.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Survey({\n  participantNumber,\n  age,\n  education\n}) {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentElementIndex, setCurrentElementIndex] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [error, setError] = useState(null);\n  const [isAIResponseLoading, setIsAIResponseLoading] = useState(false);\n  const [isAIResponseShown, setIsAIResponseShown] = useState(false);\n\n  // Fetch questions based on participantNumber\n  useEffect(() => {\n    fetch(`http://localhost:3001/questions/${participantNumber}`).then(response => {\n      if (!response.ok) {\n        throw new Error('Invalid participant number');\n      }\n      return response.json();\n    }).then(data => {\n      setQuestions(data);\n      setAnswers(data.map(() => [null, null, null, null]));\n      setError(null);\n    }).catch(error => setError(error.message));\n  }, [participantNumber]);\n\n  // Control AI response loading and display\n  useEffect(() => {\n    if (currentStep === 2) {\n      setIsAIResponseLoading(true);\n      setIsAIResponseShown(false);\n      const timer = setTimeout(() => {\n        setIsAIResponseLoading(false);\n        setIsAIResponseShown(true);\n      }, 1000);\n      return () => clearTimeout(timer);\n    } else {\n      setIsAIResponseLoading(false);\n      setIsAIResponseShown(false);\n    }\n  }, [currentStep]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n  if (questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  const getQuestion = (step, element) => {\n    const {\n      type\n    } = element;\n    if (step === 0) {\n      return {\n        text: type === 1 ? \"Do you think this claim is True or False?\" : \"Do you support or against this claim?\",\n        options: type === 1 ? [\"True\", \"False\"] : [\"Support\", \"Against\"]\n      };\n    } else if (step === 1) {\n      return {\n        text: \"How certain are you about your choice? (1 = Not at all certain, 5 = Extremely certain)\",\n        options: [1, 2, 3, 4, 5]\n      };\n    } else if (step === 2) {\n      return {\n        text: type === 1 ? \"After checking the AI response to the relevant question, do you think this claim is True or False?\" : \"After checking the AI comment to the claim, do you support or against this claim?\",\n        options: type === 1 ? [\"True\", \"False\"] : [\"Support\", \"Against\"]\n      };\n    } else if (step === 3) {\n      return {\n        text: type === 1 ? \"After checking the AI response to the relevant question, how certain are you about your choice? (1 = Not at all certain, 5 = Extremely certain)\" : \"After checking the AI comment to the claim, how certain are you about your choice? (1 = Not at all certain, 5 = Extremely certain)\",\n        options: [1, 2, 3, 4, 5]\n      };\n    }\n  };\n  const currentElement = questions[currentElementIndex];\n  const currentQuestion = getQuestion(currentStep, currentElement);\n  const handleAnswer = selectedOption => {\n    const newAnswers = [...answers];\n    newAnswers[currentElementIndex][currentStep] = selectedOption;\n    setAnswers(newAnswers);\n    if (currentStep < 3) {\n      setCurrentStep(currentStep + 1);\n    } else if (currentElementIndex < questions.length - 1) {\n      setCurrentElementIndex(currentElementIndex + 1);\n      setCurrentStep(0);\n    } else {\n      fetch('http://localhost:3001/responses', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          participantNumber,\n          age,\n          education,\n          answers: newAnswers\n        })\n      }).then(response => response.text()).then(data => {\n        console.log('Success:', data);\n        alert('Survey submitted successfully!');\n      }).catch(error => {\n        console.error('Error:', error);\n        alert('Failed to submit survey.');\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Claim \", currentElement.claim_number, \": \", currentElement.claim]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), currentStep === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [isAIResponseLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `ai-response ${isAIResponseShown ? 'show' : ''}`,\n        children: currentElement.type === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Relevant Question:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 20\n            }, this), \" \", currentElement.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"AI Response:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 20\n            }, this), \" \", currentElement.answer]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"AI Comment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 18\n          }, this), \" \", currentElement.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: currentQuestion.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAnswer(option),\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(Survey, \"G4sb2ED7JzFbvflXu7W67QQ7ozw=\");\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Survey","participantNumber","age","education","_s","questions","setQuestions","currentElementIndex","setCurrentElementIndex","currentStep","setCurrentStep","answers","setAnswers","error","setError","isAIResponseLoading","setIsAIResponseLoading","isAIResponseShown","setIsAIResponseShown","fetch","then","response","ok","Error","json","data","map","catch","message","timer","setTimeout","clearTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","length","getQuestion","step","element","type","text","options","currentElement","currentQuestion","handleAnswer","selectedOption","newAnswers","method","headers","body","JSON","stringify","console","log","alert","claim_number","claim","className","question","answer","comment","option","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wuzek/OneDrive/Desktop/fact_check_website/frontend/src/components/Survey.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Survey.css';\r\n\r\nfunction Survey({ participantNumber, age, education }) {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentElementIndex, setCurrentElementIndex] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isAIResponseLoading, setIsAIResponseLoading] = useState(false);\r\n  const [isAIResponseShown, setIsAIResponseShown] = useState(false);\r\n\r\n  // Fetch questions based on participantNumber\r\n  useEffect(() => {\r\n    fetch(`http://localhost:3001/questions/${participantNumber}`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Invalid participant number');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setQuestions(data);\r\n        setAnswers(data.map(() => [null, null, null, null]));\r\n        setError(null);\r\n      })\r\n      .catch(error => setError(error.message));\r\n  }, [participantNumber]);\r\n\r\n  // Control AI response loading and display\r\n  useEffect(() => {\r\n    if (currentStep === 2) {\r\n      setIsAIResponseLoading(true);\r\n      setIsAIResponseShown(false);\r\n      const timer = setTimeout(() => {\r\n        setIsAIResponseLoading(false);\r\n        setIsAIResponseShown(true);\r\n      }, 1000);\r\n      return () => clearTimeout(timer);\r\n    } else {\r\n      setIsAIResponseLoading(false);\r\n      setIsAIResponseShown(false);\r\n    }\r\n  }, [currentStep]);\r\n\r\n  if (error) {\r\n    return <div>{error}</div>;\r\n  }\r\n  if (questions.length === 0) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  const getQuestion = (step, element) => {\r\n    const { type } = element;\r\n    if (step === 0) {\r\n      return {\r\n        text: type === 1 ? \"Do you think this claim is True or False?\" : \"Do you support or against this claim?\",\r\n        options: type === 1 ? [\"True\", \"False\"] : [\"Support\", \"Against\"]\r\n      };\r\n    } else if (step === 1) {\r\n      return {\r\n        text: \"How certain are you about your choice? (1 = Not at all certain, 5 = Extremely certain)\",\r\n        options: [1, 2, 3, 4, 5]\r\n      };\r\n    } else if (step === 2) {\r\n      return {\r\n        text: type === 1 \r\n          ? \"After checking the AI response to the relevant question, do you think this claim is True or False?\" \r\n          : \"After checking the AI comment to the claim, do you support or against this claim?\",\r\n        options: type === 1 ? [\"True\", \"False\"] : [\"Support\", \"Against\"]\r\n      };\r\n    } else if (step === 3) {\r\n      return {\r\n        text: type === 1 \r\n          ? \"After checking the AI response to the relevant question, how certain are you about your choice? (1 = Not at all certain, 5 = Extremely certain)\" \r\n          : \"After checking the AI comment to the claim, how certain are you about your choice? (1 = Not at all certain, 5 = Extremely certain)\",\r\n        options: [1, 2, 3, 4, 5]\r\n      };\r\n    }\r\n  };\r\n\r\n  const currentElement = questions[currentElementIndex];\r\n  const currentQuestion = getQuestion(currentStep, currentElement);\r\n\r\n  const handleAnswer = (selectedOption) => {\r\n    const newAnswers = [...answers];\r\n    newAnswers[currentElementIndex][currentStep] = selectedOption;\r\n    setAnswers(newAnswers);\r\n    if (currentStep < 3) {\r\n      setCurrentStep(currentStep + 1);\r\n    } else if (currentElementIndex < questions.length - 1) {\r\n      setCurrentElementIndex(currentElementIndex + 1);\r\n      setCurrentStep(0);\r\n    } else {\r\n      fetch('http://localhost:3001/responses', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          participantNumber,\r\n          age,\r\n          education,\r\n          answers: newAnswers,\r\n        }),\r\n      })\r\n        .then(response => response.text())\r\n        .then(data => {\r\n          console.log('Success:', data);\r\n          alert('Survey submitted successfully!');\r\n        })\r\n        .catch(error => {\r\n          console.error('Error:', error);\r\n          alert('Failed to submit survey.');\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Claim {currentElement.claim_number}: {currentElement.claim}</h2>\r\n      {currentStep === 2 && (\r\n        <>\r\n          {isAIResponseLoading && <div className=\"loading\"></div>}\r\n          <div className={`ai-response ${isAIResponseShown ? 'show' : ''}`}>\r\n            {currentElement.type === 1 ? (\r\n              <>\r\n                <p><strong>Relevant Question:</strong> {currentElement.question}</p>\r\n                <p><strong>AI Response:</strong> {currentElement.answer}</p>\r\n              </>\r\n            ) : (\r\n              <p><strong>AI Comment:</strong> {currentElement.comment}</p>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n      <p>{currentQuestion.text}</p>\r\n      <div>\r\n        {currentQuestion.options.map(option => (\r\n          <button key={option} onClick={() => handleAnswer(option)}>\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Survey;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}