{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wuzek\\\\OneDrive\\\\Desktop\\\\belief_change_survey\\\\frontend\\\\src\\\\components\\\\Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Survey.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Survey({\n  participantNumber,\n  age,\n  education,\n  onComplete\n}) {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentElementIndex, setCurrentElementIndex] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [error, setError] = useState(null);\n  const [isAITyping, setIsAITyping] = useState(false);\n  const [typedText, setTypedText] = useState('');\n  const [isAIRequested, setIsAIRequested] = useState(false);\n  const [supportCounter, setSupportCounter] = useState(0);\n  const [againstCounter, setAgainstCounter] = useState(0);\n  const [commentToShow, setCommentToShow] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  // Fetch questions from backend\n  useEffect(() => {\n    console.log(\"Backend URL:\", process.env.REACT_APP_BACKEND_URL);\n    fetch(`${process.env.REACT_APP_BACKEND_URL || 'http://localhost:3001'}/questions/${participantNumber}`).then(response => {\n      if (!response.ok) throw new Error('Invalid participant number');\n      return response.json();\n    }).then(data => {\n      setQuestions(data);\n      setAnswers(data.map(() => [null, null, null, null, null])); // 5 steps now\n      setError(null);\n    }).catch(error => setError(error.message));\n  }, [participantNumber]);\n\n  // Reset AI state when step changes\n  useEffect(() => {\n    if (currentStep !== 2) {\n      setIsAIRequested(false);\n      setTypedText('');\n      setIsAITyping(false);\n    }\n  }, [currentStep]);\n\n  // Handle AI typing effect\n  useEffect(() => {\n    if (currentStep === 2 && isAIRequested && questions.length > 0) {\n      const currentElement = questions[currentElementIndex];\n      let aiText;\n      if (currentElement.type === 1) {\n        aiText = currentElement.answer;\n      } else if (currentElement.type === 2) {\n        const commentIndex = commentToShow[currentElementIndex];\n        aiText = commentIndex === 1 ? currentElement.comment1 : currentElement.comment2;\n      }\n      if (typeof aiText !== 'string' || aiText.length === 0) {\n        console.error('No valid AI text to display:', aiText);\n        setTypedText('');\n        setIsAITyping(false);\n        return;\n      }\n      setTypedText('');\n      setIsAITyping(true);\n      let index = 0;\n      const typingInterval = setInterval(() => {\n        if (index < aiText.length) {\n          setTypedText(aiText.slice(0, index + 1));\n          index++;\n        } else {\n          clearInterval(typingInterval);\n          setIsAITyping(false);\n        }\n      }, 50);\n      return () => clearInterval(typingInterval);\n    }\n  }, [isAIRequested, currentStep, questions, currentElementIndex, commentToShow]);\n\n  // Initialize commentToShow array\n  useEffect(() => {\n    if (questions.length > 0) {\n      setCommentToShow(Array(questions.length).fill(0));\n    }\n  }, [questions]);\n  const getQuestion = (step, element) => {\n    if (!element) return null;\n    const {\n      type\n    } = element;\n    switch (step) {\n      case 0:\n        return {\n          text: type === 1 ? \"Do you think this claim is True or False?\" : \"Do you agree or disagree with this claim?\",\n          options: type === 1 ? [\"True\", \"False\"] : [\"Agree\", \"Disagree\"]\n        };\n      case 1:\n        return {\n          text: \"How certain are you about your choice? (1 = Not at all certain, 5 = Absolutely certain)\",\n          options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\n        };\n      case 2:\n        return {\n          text: type === 1 ? \"After checking the AI response, do you think this claim is True or False?\" : \"After checking the AI comment, do you agree or disagree with this claim?\",\n          options: type === 1 ? [\"True\", \"False\"] : [\"Agree\", \"Disagree\"]\n        };\n      case 3:\n        return {\n          text: \"How confident are you in the AI's response? (1 = Not at all confident, 5 = Very confident)\",\n          options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\n        };\n      case 4:\n        return {\n          text: \"To what extent do you trust the AI-generated information in helping you verify this factual claim?\",\n          options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\n        };\n      default:\n        return null;\n    }\n  };\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n  const handleNext = async () => {\n    if (selectedOption === null) {\n      alert('Please select an option before proceeding');\n      return;\n    }\n    const newAnswers = [...answers];\n    newAnswers[currentElementIndex][currentStep] = selectedOption;\n    setAnswers(newAnswers);\n\n    // Handle comment selection for type 2 questions\n    if (currentStep === 0 && questions[currentElementIndex].type === 2) {\n      if (selectedOption === \"Agree\") {\n        const commentIndex = supportCounter % 2 === 0 ? 1 : 2;\n        setCommentToShow(prev => {\n          const newCommentToShow = [...prev];\n          newCommentToShow[currentElementIndex] = commentIndex;\n          return newCommentToShow;\n        });\n        setSupportCounter(prev => prev + 1);\n      } else if (selectedOption === \"Disagree\") {\n        const commentIndex = againstCounter % 2 === 0 ? 1 : 2;\n        setCommentToShow(prev => {\n          const newCommentToShow = [...prev];\n          newCommentToShow[currentElementIndex] = commentIndex;\n          return newCommentToShow;\n        });\n        setAgainstCounter(prev => prev + 1);\n      }\n    }\n    if (currentStep < 4) {\n      setCurrentStep(currentStep + 1);\n    } else if (currentElementIndex < questions.length - 1) {\n      setCurrentElementIndex(currentElementIndex + 1);\n      setCurrentStep(0);\n    } else {\n      // Submit final answers\n      try {\n        const response = await fetch(`${process.env.REACT_APP_BACKEND_URL || 'http://localhost:3001'}/responses`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            participantNumber,\n            age,\n            education,\n            answers: newAnswers\n          })\n        });\n        if (!response.ok) {\n          throw new Error('Failed to save responses');\n        }\n        onComplete && onComplete(newAnswers);\n      } catch (error) {\n        console.error('Error saving responses:', error);\n        alert('There was an error saving your responses. Please try again.');\n      }\n    }\n    setSelectedOption(null);\n  };\n  const handleAIRequest = () => {\n    setIsAIRequested(true);\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 21\n  }, this);\n  if (!questions || questions.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading questions...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 52\n  }, this);\n  const currentElement = questions[currentElementIndex];\n  const currentQuestion = getQuestion(currentStep, currentElement);\n  if (!currentQuestion) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading question...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 32\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"survey-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"claim-section\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Claim \", currentElementIndex + 1, \": \", currentElement.claim]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), currentStep === 2 && currentElement.type === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Relevant Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 14\n        }, this), \" \", currentElement.question]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this), currentStep === 2 && !isAIRequested && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAIRequest,\n      className: \"ai-button\",\n      children: \"Ask AI for suggestion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this), currentStep === 2 && isAIRequested && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: currentElement.type === 1 ? \"AI Response:\" : \"AI Comment:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: typedText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), (currentStep !== 2 || currentStep === 2 && isAIRequested && !isAITyping) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-section\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentQuestion.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-section\",\n        children: currentQuestion.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOptionSelect(option),\n          className: selectedOption === option ? 'selected' : '',\n          children: option\n        }, option, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"next-button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-button\",\n          onClick: handleNext,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), currentStep === 2 && isAIRequested && isAITyping && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"AI is generating response...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(Survey, \"7G0lUxi1bBCRNB96IcLsjC8VlSA=\");\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Survey","participantNumber","age","education","onComplete","_s","questions","setQuestions","currentElementIndex","setCurrentElementIndex","currentStep","setCurrentStep","answers","setAnswers","error","setError","isAITyping","setIsAITyping","typedText","setTypedText","isAIRequested","setIsAIRequested","supportCounter","setSupportCounter","againstCounter","setAgainstCounter","commentToShow","setCommentToShow","selectedOption","setSelectedOption","console","log","process","env","REACT_APP_BACKEND_URL","fetch","then","response","ok","Error","json","data","map","catch","message","length","currentElement","aiText","type","answer","commentIndex","comment1","comment2","index","typingInterval","setInterval","slice","clearInterval","Array","fill","getQuestion","step","element","text","options","handleOptionSelect","option","handleNext","alert","newAnswers","prev","newCommentToShow","method","headers","body","JSON","stringify","handleAIRequest","children","fileName","_jsxFileName","lineNumber","columnNumber","currentQuestion","className","claim","question","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wuzek/OneDrive/Desktop/belief_change_survey/frontend/src/components/Survey.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Survey.css';\r\n\r\nfunction Survey({ participantNumber, age, education, onComplete }) {\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentElementIndex, setCurrentElementIndex] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isAITyping, setIsAITyping] = useState(false);\r\n  const [typedText, setTypedText] = useState('');\r\n  const [isAIRequested, setIsAIRequested] = useState(false);\r\n  const [supportCounter, setSupportCounter] = useState(0);\r\n  const [againstCounter, setAgainstCounter] = useState(0);\r\n  const [commentToShow, setCommentToShow] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n\r\n  // Fetch questions from backend\r\n  useEffect(() => {\r\n    console.log(\"Backend URL:\", process.env.REACT_APP_BACKEND_URL);\r\n    fetch(`${process.env.REACT_APP_BACKEND_URL || 'http://localhost:3001'}/questions/${participantNumber}`)\r\n      .then(response => {\r\n        if (!response.ok) throw new Error('Invalid participant number');\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        setQuestions(data);\r\n        setAnswers(data.map(() => [null, null, null, null, null])); // 5 steps now\r\n        setError(null);\r\n      })\r\n      .catch(error => setError(error.message));\r\n  }, [participantNumber]);\r\n\r\n  // Reset AI state when step changes\r\n  useEffect(() => {\r\n    if (currentStep !== 2) {\r\n      setIsAIRequested(false);\r\n      setTypedText('');\r\n      setIsAITyping(false);\r\n    }\r\n  }, [currentStep]);\r\n\r\n  // Handle AI typing effect\r\n  useEffect(() => {\r\n    if (currentStep === 2 && isAIRequested && questions.length > 0) {\r\n      const currentElement = questions[currentElementIndex];\r\n      let aiText;\r\n      \r\n      if (currentElement.type === 1) {\r\n        aiText = currentElement.answer;\r\n      } else if (currentElement.type === 2) {\r\n        const commentIndex = commentToShow[currentElementIndex];\r\n        aiText = commentIndex === 1 ? currentElement.comment1 : currentElement.comment2;\r\n      }\r\n\r\n      if (typeof aiText !== 'string' || aiText.length === 0) {\r\n        console.error('No valid AI text to display:', aiText);\r\n        setTypedText('');\r\n        setIsAITyping(false);\r\n        return;\r\n      }\r\n\r\n      setTypedText('');\r\n      setIsAITyping(true);\r\n      let index = 0;\r\n      const typingInterval = setInterval(() => {\r\n        if (index < aiText.length) {\r\n          setTypedText(aiText.slice(0, index + 1));\r\n          index++;\r\n        } else {\r\n          clearInterval(typingInterval);\r\n          setIsAITyping(false);\r\n        }\r\n      }, 50);\r\n\r\n      return () => clearInterval(typingInterval);\r\n    }\r\n  }, [isAIRequested, currentStep, questions, currentElementIndex, commentToShow]);\r\n\r\n  // Initialize commentToShow array\r\n  useEffect(() => {\r\n    if (questions.length > 0) {\r\n      setCommentToShow(Array(questions.length).fill(0));\r\n    }\r\n  }, [questions]);\r\n\r\n  const getQuestion = (step, element) => {\r\n    if (!element) return null;\r\n    \r\n    const { type } = element;\r\n    switch (step) {\r\n      case 0:\r\n        return {\r\n          text: type === 1 ? \"Do you think this claim is True or False?\" : \"Do you agree or disagree with this claim?\",\r\n          options: type === 1 ? [\"True\", \"False\"] : [\"Agree\", \"Disagree\"]\r\n        };\r\n      case 1:\r\n        return {\r\n          text: \"How certain are you about your choice? (1 = Not at all certain, 5 = Absolutely certain)\",\r\n          options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n        };\r\n      case 2:\r\n        return {\r\n          text: type === 1 \r\n            ? \"After checking the AI response, do you think this claim is True or False?\" \r\n            : \"After checking the AI comment, do you agree or disagree with this claim?\",\r\n          options: type === 1 ? [\"True\", \"False\"] : [\"Agree\", \"Disagree\"]\r\n        };\r\n      case 3:\r\n        return {\r\n          text: \"How confident are you in the AI's response? (1 = Not at all confident, 5 = Very confident)\",\r\n          options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n        };\r\n      case 4:\r\n        return {\r\n          text: \"To what extent do you trust the AI-generated information in helping you verify this factual claim?\",\r\n          options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n        };\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const handleNext = async () => {\r\n    if (selectedOption === null) {\r\n      alert('Please select an option before proceeding');\r\n      return;\r\n    }\r\n\r\n    const newAnswers = [...answers];\r\n    newAnswers[currentElementIndex][currentStep] = selectedOption;\r\n    setAnswers(newAnswers);\r\n\r\n    // Handle comment selection for type 2 questions\r\n    if (currentStep === 0 && questions[currentElementIndex].type === 2) {\r\n      if (selectedOption === \"Agree\") {\r\n        const commentIndex = supportCounter % 2 === 0 ? 1 : 2;\r\n        setCommentToShow(prev => {\r\n          const newCommentToShow = [...prev];\r\n          newCommentToShow[currentElementIndex] = commentIndex;\r\n          return newCommentToShow;\r\n        });\r\n        setSupportCounter(prev => prev + 1);\r\n      } else if (selectedOption === \"Disagree\") {\r\n        const commentIndex = againstCounter % 2 === 0 ? 1 : 2;\r\n        setCommentToShow(prev => {\r\n          const newCommentToShow = [...prev];\r\n          newCommentToShow[currentElementIndex] = commentIndex;\r\n          return newCommentToShow;\r\n        });\r\n        setAgainstCounter(prev => prev + 1);\r\n      }\r\n    }\r\n\r\n    if (currentStep < 4) {\r\n      setCurrentStep(currentStep + 1);\r\n    } else if (currentElementIndex < questions.length - 1) {\r\n      setCurrentElementIndex(currentElementIndex + 1);\r\n      setCurrentStep(0);\r\n    } else {\r\n      // Submit final answers\r\n      try {\r\n        const response = await fetch(`${process.env.REACT_APP_BACKEND_URL || 'http://localhost:3001'}/responses`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            participantNumber,\r\n            age,\r\n            education,\r\n            answers: newAnswers\r\n          }),\r\n        });\r\n\r\n        if (!response.ok) {\r\n          throw new Error('Failed to save responses');\r\n        }\r\n\r\n        onComplete && onComplete(newAnswers);\r\n      } catch (error) {\r\n        console.error('Error saving responses:', error);\r\n        alert('There was an error saving your responses. Please try again.');\r\n      }\r\n    }\r\n\r\n    setSelectedOption(null);\r\n  };\r\n\r\n  const handleAIRequest = () => {\r\n    setIsAIRequested(true);\r\n  };\r\n\r\n  if (error) return <div>{error}</div>;\r\n  if (!questions || questions.length === 0) return <div>Loading questions...</div>;\r\n\r\n  const currentElement = questions[currentElementIndex];\r\n  const currentQuestion = getQuestion(currentStep, currentElement);\r\n\r\n  if (!currentQuestion) return <div>Loading question...</div>;\r\n\r\n  return (\r\n    <div className=\"survey-container\">\r\n      <div className=\"claim-section\">\r\n        <h2>Claim {currentElementIndex + 1}: {currentElement.claim}</h2>\r\n      </div>\r\n\r\n      {currentStep === 2 && currentElement.type === 1 && (\r\n        <div className=\"question-section\">\r\n          <p><strong>Relevant Question:</strong> {currentElement.question}</p>\r\n        </div>\r\n      )}\r\n\r\n      {currentStep === 2 && !isAIRequested && (\r\n        <button onClick={handleAIRequest} className=\"ai-button\">\r\n          Ask AI for suggestion\r\n        </button>\r\n      )}\r\n\r\n      {currentStep === 2 && isAIRequested && (\r\n        <div className=\"ai-section\">\r\n          <p>\r\n            <strong>\r\n              {currentElement.type === 1 ? \"AI Response:\" : \"AI Comment:\"}\r\n            </strong>\r\n          </p>\r\n          <p>{typedText}</p>\r\n        </div>\r\n      )}\r\n\r\n      {(currentStep !== 2 || (currentStep === 2 && isAIRequested && !isAITyping)) && (\r\n        <>\r\n          <div className=\"question-section\">\r\n            <p>{currentQuestion.text}</p>\r\n          </div>\r\n          <div className=\"options-section\">\r\n            {currentQuestion.options.map((option) => (\r\n              <button\r\n                key={option}\r\n                onClick={() => handleOptionSelect(option)}\r\n                className={selectedOption === option ? 'selected' : ''}\r\n              >\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"next-button-container\">\r\n            <button \r\n              className=\"next-button\"\r\n              onClick={handleNext}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {currentStep === 2 && isAIRequested && isAITyping && (\r\n        <div>AI is generating response...</div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Survey;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}