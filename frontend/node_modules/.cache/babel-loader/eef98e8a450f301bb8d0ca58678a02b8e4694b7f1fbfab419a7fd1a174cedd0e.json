{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wuzek\\\\OneDrive\\\\Desktop\\\\belief_change_survey\\\\frontend\\\\src\\\\components\\\\Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Survey.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Survey({\n  questions,\n  onComplete\n}) {\n  _s();\n  const [currentElementIndex, setCurrentElementIndex] = useState(0);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [questionData, setQuestionData] = useState(null);\n\n  // Initialize answers array\n  useEffect(() => {\n    if (questions && questions.length > 0) {\n      setAnswers(Array(questions.length).fill([]));\n    }\n  }, [questions]);\n\n  // Update question data when step or index changes\n  useEffect(() => {\n    if (questions && questions[currentElementIndex]) {\n      const {\n        type\n      } = questions[currentElementIndex];\n      let newQuestionData = null;\n      if (currentStep === 0) {\n        newQuestionData = {\n          text: type === 1 ? \"Do you think this claim is True or False?\" : \"Do you agree or disagree with this claim?\",\n          options: type === 1 ? [\"True\", \"False\"] : [\"Agree\", \"Disagree\"]\n        };\n      } else if (currentStep === 1) {\n        newQuestionData = {\n          text: \"How certain are you about your choice? (1 = Not at all certain, 5 = Absolutely certain)\",\n          options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\n        };\n      }\n      setQuestionData(newQuestionData);\n    }\n  }, [currentStep, currentElementIndex, questions]);\n\n  // Handle option selection\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n  };\n\n  // Handle next button click\n  const handleNext = () => {\n    if (selectedOption === null) {\n      alert('Please select an option before proceeding');\n      return;\n    }\n    const newAnswers = [...answers];\n    if (!newAnswers[currentElementIndex]) {\n      newAnswers[currentElementIndex] = [];\n    }\n    newAnswers[currentElementIndex][currentStep] = selectedOption;\n    setAnswers(newAnswers);\n    if (currentStep < 1) {\n      // Simplified to just 2 steps for now\n      setCurrentStep(currentStep + 1);\n    } else if (currentElementIndex < questions.length - 1) {\n      setCurrentElementIndex(currentElementIndex + 1);\n      setCurrentStep(0);\n    } else {\n      onComplete && onComplete(newAnswers);\n    }\n    setSelectedOption(null);\n  };\n\n  // Render loading state if question data is not ready\n  if (!questionData || !questions || questions.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading question data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"survey-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: questions[currentElementIndex].text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-section\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: questionData.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-section\",\n      children: questionData.options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptionSelect(option),\n        className: selectedOption === option ? 'selected' : '',\n        children: option\n      }, option, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"next-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-button\",\n        onClick: handleNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Survey, \"6yNUxSN/jkTp2y1Lv36l1/jbbBA=\");\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Survey","questions","onComplete","_s","currentElementIndex","setCurrentElementIndex","currentStep","setCurrentStep","answers","setAnswers","selectedOption","setSelectedOption","questionData","setQuestionData","length","Array","fill","type","newQuestionData","text","options","handleOptionSelect","option","handleNext","alert","newAnswers","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/wuzek/OneDrive/Desktop/belief_change_survey/frontend/src/components/Survey.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Survey.css';\r\n\r\nfunction Survey({ questions, onComplete }) {\r\n  const [currentElementIndex, setCurrentElementIndex] = useState(0);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [selectedOption, setSelectedOption] = useState(null);\r\n  const [questionData, setQuestionData] = useState(null);\r\n\r\n  // Initialize answers array\r\n  useEffect(() => {\r\n    if (questions && questions.length > 0) {\r\n      setAnswers(Array(questions.length).fill([]));\r\n    }\r\n  }, [questions]);\r\n\r\n  // Update question data when step or index changes\r\n  useEffect(() => {\r\n    if (questions && questions[currentElementIndex]) {\r\n      const { type } = questions[currentElementIndex];\r\n      \r\n      let newQuestionData = null;\r\n      \r\n      if (currentStep === 0) {\r\n        newQuestionData = {\r\n          text: type === 1 ? \"Do you think this claim is True or False?\" : \"Do you agree or disagree with this claim?\",\r\n          options: type === 1 ? [\"True\", \"False\"] : [\"Agree\", \"Disagree\"]\r\n        };\r\n      } else if (currentStep === 1) {\r\n        newQuestionData = {\r\n          text: \"How certain are you about your choice? (1 = Not at all certain, 5 = Absolutely certain)\",\r\n          options: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n        };\r\n      }\r\n      \r\n      setQuestionData(newQuestionData);\r\n    }\r\n  }, [currentStep, currentElementIndex, questions]);\r\n\r\n  // Handle option selection\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  // Handle next button click\r\n  const handleNext = () => {\r\n    if (selectedOption === null) {\r\n      alert('Please select an option before proceeding');\r\n      return;\r\n    }\r\n\r\n    const newAnswers = [...answers];\r\n    if (!newAnswers[currentElementIndex]) {\r\n      newAnswers[currentElementIndex] = [];\r\n    }\r\n    newAnswers[currentElementIndex][currentStep] = selectedOption;\r\n    setAnswers(newAnswers);\r\n\r\n    if (currentStep < 1) {  // Simplified to just 2 steps for now\r\n      setCurrentStep(currentStep + 1);\r\n    } else if (currentElementIndex < questions.length - 1) {\r\n      setCurrentElementIndex(currentElementIndex + 1);\r\n      setCurrentStep(0);\r\n    } else {\r\n      onComplete && onComplete(newAnswers);\r\n    }\r\n\r\n    setSelectedOption(null);\r\n  };\r\n\r\n  // Render loading state if question data is not ready\r\n  if (!questionData || !questions || questions.length === 0) {\r\n    return <div>Loading question data...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"survey-container\">\r\n      <h2>{questions[currentElementIndex].text}</h2>\r\n      \r\n      <div className=\"question-section\">\r\n        <p>{questionData.text}</p>\r\n      </div>\r\n      <div className=\"options-section\">\r\n        {questionData.options.map((option) => (\r\n          <button\r\n            key={option}\r\n            onClick={() => handleOptionSelect(option)}\r\n            className={selectedOption === option ? 'selected' : ''}\r\n          >\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <div className=\"next-button-container\">\r\n        <button \r\n          className=\"next-button\"\r\n          onClick={handleNext}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Survey;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAC;EAAEC,SAAS;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACd,IAAII,SAAS,IAAIA,SAAS,CAACa,MAAM,GAAG,CAAC,EAAE;MACrCL,UAAU,CAACM,KAAK,CAACd,SAAS,CAACa,MAAM,CAAC,CAACE,IAAI,CAAC,EAAE,CAAC,CAAC;IAC9C;EACF,CAAC,EAAE,CAACf,SAAS,CAAC,CAAC;;EAEf;EACAJ,SAAS,CAAC,MAAM;IACd,IAAII,SAAS,IAAIA,SAAS,CAACG,mBAAmB,CAAC,EAAE;MAC/C,MAAM;QAAEa;MAAK,CAAC,GAAGhB,SAAS,CAACG,mBAAmB,CAAC;MAE/C,IAAIc,eAAe,GAAG,IAAI;MAE1B,IAAIZ,WAAW,KAAK,CAAC,EAAE;QACrBY,eAAe,GAAG;UAChBC,IAAI,EAAEF,IAAI,KAAK,CAAC,GAAG,2CAA2C,GAAG,2CAA2C;UAC5GG,OAAO,EAAEH,IAAI,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,UAAU;QAChE,CAAC;MACH,CAAC,MAAM,IAAIX,WAAW,KAAK,CAAC,EAAE;QAC5BY,eAAe,GAAG;UAChBC,IAAI,EAAE,yFAAyF;UAC/FC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;QACnC,CAAC;MACH;MAEAP,eAAe,CAACK,eAAe,CAAC;IAClC;EACF,CAAC,EAAE,CAACZ,WAAW,EAAEF,mBAAmB,EAAEH,SAAS,CAAC,CAAC;;EAEjD;EACA,MAAMoB,kBAAkB,GAAIC,MAAM,IAAK;IACrCX,iBAAiB,CAACW,MAAM,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIb,cAAc,KAAK,IAAI,EAAE;MAC3Bc,KAAK,CAAC,2CAA2C,CAAC;MAClD;IACF;IAEA,MAAMC,UAAU,GAAG,CAAC,GAAGjB,OAAO,CAAC;IAC/B,IAAI,CAACiB,UAAU,CAACrB,mBAAmB,CAAC,EAAE;MACpCqB,UAAU,CAACrB,mBAAmB,CAAC,GAAG,EAAE;IACtC;IACAqB,UAAU,CAACrB,mBAAmB,CAAC,CAACE,WAAW,CAAC,GAAGI,cAAc;IAC7DD,UAAU,CAACgB,UAAU,CAAC;IAEtB,IAAInB,WAAW,GAAG,CAAC,EAAE;MAAG;MACtBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;IACjC,CAAC,MAAM,IAAIF,mBAAmB,GAAGH,SAAS,CAACa,MAAM,GAAG,CAAC,EAAE;MACrDT,sBAAsB,CAACD,mBAAmB,GAAG,CAAC,CAAC;MAC/CG,cAAc,CAAC,CAAC,CAAC;IACnB,CAAC,MAAM;MACLL,UAAU,IAAIA,UAAU,CAACuB,UAAU,CAAC;IACtC;IAEAd,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;;EAED;EACA,IAAI,CAACC,YAAY,IAAI,CAACX,SAAS,IAAIA,SAAS,CAACa,MAAM,KAAK,CAAC,EAAE;IACzD,oBAAOf,OAAA;MAAA2B,QAAA,EAAK;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5C;EAEA,oBACE/B,OAAA;IAAKgC,SAAS,EAAC,kBAAkB;IAAAL,QAAA,gBAC/B3B,OAAA;MAAA2B,QAAA,EAAKzB,SAAS,CAACG,mBAAmB,CAAC,CAACe;IAAI;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE9C/B,OAAA;MAAKgC,SAAS,EAAC,kBAAkB;MAAAL,QAAA,eAC/B3B,OAAA;QAAA2B,QAAA,EAAId,YAAY,CAACO;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACN/B,OAAA;MAAKgC,SAAS,EAAC,iBAAiB;MAAAL,QAAA,EAC7Bd,YAAY,CAACQ,OAAO,CAACY,GAAG,CAAEV,MAAM,iBAC/BvB,OAAA;QAEEkC,OAAO,EAAEA,CAAA,KAAMZ,kBAAkB,CAACC,MAAM,CAAE;QAC1CS,SAAS,EAAErB,cAAc,KAAKY,MAAM,GAAG,UAAU,GAAG,EAAG;QAAAI,QAAA,EAEtDJ;MAAM,GAJFA,MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKL,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/B,OAAA;MAAKgC,SAAS,EAAC,uBAAuB;MAAAL,QAAA,eACpC3B,OAAA;QACEgC,SAAS,EAAC,aAAa;QACvBE,OAAO,EAAEV,UAAW;QAAAG,QAAA,EACrB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3B,EAAA,CArGQH,MAAM;AAAAkC,EAAA,GAANlC,MAAM;AAuGf,eAAeA,MAAM;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}